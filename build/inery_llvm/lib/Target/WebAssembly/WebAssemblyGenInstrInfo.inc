/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace WebAssembly {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    ANNOTATION_LABEL	= 5,
    KILL	= 6,
    EXTRACT_SUBREG	= 7,
    INSERT_SUBREG	= 8,
    IMPLICIT_DEF	= 9,
    SUBREG_TO_REG	= 10,
    COPY_TO_REGCLASS	= 11,
    DBG_VALUE	= 12,
    DBG_LABEL	= 13,
    REG_SEQUENCE	= 14,
    COPY	= 15,
    BUNDLE	= 16,
    LIFETIME_START	= 17,
    LIFETIME_END	= 18,
    STACKMAP	= 19,
    FENTRY_CALL	= 20,
    PATCHPOINT	= 21,
    LOAD_STACK_GUARD	= 22,
    STATEPOINT	= 23,
    LOCAL_ESCAPE	= 24,
    FAULTING_OP	= 25,
    PATCHABLE_OP	= 26,
    PATCHABLE_FUNCTION_ENTER	= 27,
    PATCHABLE_RET	= 28,
    PATCHABLE_FUNCTION_EXIT	= 29,
    PATCHABLE_TAIL_CALL	= 30,
    PATCHABLE_EVENT_CALL	= 31,
    PATCHABLE_TYPED_EVENT_CALL	= 32,
    ICALL_BRANCH_FUNNEL	= 33,
    G_ADD	= 34,
    G_SUB	= 35,
    G_MUL	= 36,
    G_SDIV	= 37,
    G_UDIV	= 38,
    G_SREM	= 39,
    G_UREM	= 40,
    G_AND	= 41,
    G_OR	= 42,
    G_XOR	= 43,
    G_IMPLICIT_DEF	= 44,
    G_PHI	= 45,
    G_FRAME_INDEX	= 46,
    G_GLOBAL_VALUE	= 47,
    G_EXTRACT	= 48,
    G_UNMERGE_VALUES	= 49,
    G_INSERT	= 50,
    G_MERGE_VALUES	= 51,
    G_PTRTOINT	= 52,
    G_INTTOPTR	= 53,
    G_BITCAST	= 54,
    G_LOAD	= 55,
    G_SEXTLOAD	= 56,
    G_ZEXTLOAD	= 57,
    G_STORE	= 58,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 59,
    G_ATOMIC_CMPXCHG	= 60,
    G_ATOMICRMW_XCHG	= 61,
    G_ATOMICRMW_ADD	= 62,
    G_ATOMICRMW_SUB	= 63,
    G_ATOMICRMW_AND	= 64,
    G_ATOMICRMW_NAND	= 65,
    G_ATOMICRMW_OR	= 66,
    G_ATOMICRMW_XOR	= 67,
    G_ATOMICRMW_MAX	= 68,
    G_ATOMICRMW_MIN	= 69,
    G_ATOMICRMW_UMAX	= 70,
    G_ATOMICRMW_UMIN	= 71,
    G_BRCOND	= 72,
    G_BRINDIRECT	= 73,
    G_INTRINSIC	= 74,
    G_INTRINSIC_W_SIDE_EFFECTS	= 75,
    G_ANYEXT	= 76,
    G_TRUNC	= 77,
    G_CONSTANT	= 78,
    G_FCONSTANT	= 79,
    G_VASTART	= 80,
    G_VAARG	= 81,
    G_SEXT	= 82,
    G_ZEXT	= 83,
    G_SHL	= 84,
    G_LSHR	= 85,
    G_ASHR	= 86,
    G_ICMP	= 87,
    G_FCMP	= 88,
    G_SELECT	= 89,
    G_UADDE	= 90,
    G_USUBE	= 91,
    G_SADDO	= 92,
    G_SSUBO	= 93,
    G_UMULO	= 94,
    G_SMULO	= 95,
    G_UMULH	= 96,
    G_SMULH	= 97,
    G_FADD	= 98,
    G_FSUB	= 99,
    G_FMUL	= 100,
    G_FMA	= 101,
    G_FDIV	= 102,
    G_FREM	= 103,
    G_FPOW	= 104,
    G_FEXP	= 105,
    G_FEXP2	= 106,
    G_FLOG	= 107,
    G_FLOG2	= 108,
    G_FNEG	= 109,
    G_FPEXT	= 110,
    G_FPTRUNC	= 111,
    G_FPTOSI	= 112,
    G_FPTOUI	= 113,
    G_SITOFP	= 114,
    G_UITOFP	= 115,
    G_FABS	= 116,
    G_GEP	= 117,
    G_PTR_MASK	= 118,
    G_BR	= 119,
    G_INSERT_VECTOR_ELT	= 120,
    G_EXTRACT_VECTOR_ELT	= 121,
    G_SHUFFLE_VECTOR	= 122,
    G_BSWAP	= 123,
    ABS_F32	= 124,
    ABS_F64	= 125,
    ADD_F32	= 126,
    ADD_F32x4	= 127,
    ADD_F64	= 128,
    ADD_I16x8	= 129,
    ADD_I32	= 130,
    ADD_I32x4	= 131,
    ADD_I64	= 132,
    ADD_I8x16	= 133,
    ADJCALLSTACKDOWN	= 134,
    ADJCALLSTACKUP	= 135,
    AND_I32	= 136,
    AND_I64	= 137,
    ARGUMENT_EXCEPT_REF	= 138,
    ARGUMENT_F32	= 139,
    ARGUMENT_F64	= 140,
    ARGUMENT_I32	= 141,
    ARGUMENT_I64	= 142,
    ARGUMENT_v16i8	= 143,
    ARGUMENT_v4f32	= 144,
    ARGUMENT_v4i32	= 145,
    ARGUMENT_v8i16	= 146,
    ATOMIC_LOAD16_U_I32	= 147,
    ATOMIC_LOAD16_U_I64	= 148,
    ATOMIC_LOAD32_U_I64	= 149,
    ATOMIC_LOAD8_U_I32	= 150,
    ATOMIC_LOAD8_U_I64	= 151,
    ATOMIC_LOAD_I32	= 152,
    ATOMIC_LOAD_I64	= 153,
    BLOCK	= 154,
    BR	= 155,
    BR_IF	= 156,
    BR_TABLE_I32	= 157,
    BR_TABLE_I64	= 158,
    BR_UNLESS	= 159,
    CALL_EXCEPT_REF	= 160,
    CALL_F32	= 161,
    CALL_F64	= 162,
    CALL_I32	= 163,
    CALL_I64	= 164,
    CALL_INDIRECT_EXCEPT_REF	= 165,
    CALL_INDIRECT_F32	= 166,
    CALL_INDIRECT_F64	= 167,
    CALL_INDIRECT_I32	= 168,
    CALL_INDIRECT_I64	= 169,
    CALL_INDIRECT_VOID	= 170,
    CALL_INDIRECT_v16i8	= 171,
    CALL_INDIRECT_v4f32	= 172,
    CALL_INDIRECT_v4i32	= 173,
    CALL_INDIRECT_v8i16	= 174,
    CALL_VOID	= 175,
    CALL_v16i8	= 176,
    CALL_v4f32	= 177,
    CALL_v4i32	= 178,
    CALL_v8i16	= 179,
    CATCHRET	= 180,
    CATCH_ALL	= 181,
    CATCH_I32	= 182,
    CATCH_I64	= 183,
    CEIL_F32	= 184,
    CEIL_F64	= 185,
    CLEANUPRET	= 186,
    CLZ_I32	= 187,
    CLZ_I64	= 188,
    CONST_F32	= 189,
    CONST_F64	= 190,
    CONST_I32	= 191,
    CONST_I64	= 192,
    COPYSIGN_F32	= 193,
    COPYSIGN_F64	= 194,
    COPY_EXCEPT_REF	= 195,
    COPY_F32	= 196,
    COPY_F64	= 197,
    COPY_I32	= 198,
    COPY_I64	= 199,
    COPY_V128	= 200,
    CTZ_I32	= 201,
    CTZ_I64	= 202,
    CURRENT_MEMORY_I32	= 203,
    DIV_F32	= 204,
    DIV_F64	= 205,
    DIV_S_I32	= 206,
    DIV_S_I64	= 207,
    DIV_U_I32	= 208,
    DIV_U_I64	= 209,
    DROP_EXCEPT_REF	= 210,
    DROP_F32	= 211,
    DROP_F64	= 212,
    DROP_I32	= 213,
    DROP_I64	= 214,
    DROP_V128	= 215,
    END_BLOCK	= 216,
    END_FUNCTION	= 217,
    END_LOOP	= 218,
    END_TRY	= 219,
    EQZ_I32	= 220,
    EQZ_I64	= 221,
    EQ_F32	= 222,
    EQ_F64	= 223,
    EQ_I32	= 224,
    EQ_I64	= 225,
    F32_CONVERT_S_I32	= 226,
    F32_CONVERT_S_I64	= 227,
    F32_CONVERT_U_I32	= 228,
    F32_CONVERT_U_I64	= 229,
    F32_DEMOTE_F64	= 230,
    F32_REINTERPRET_I32	= 231,
    F64_CONVERT_S_I32	= 232,
    F64_CONVERT_S_I64	= 233,
    F64_CONVERT_U_I32	= 234,
    F64_CONVERT_U_I64	= 235,
    F64_PROMOTE_F32	= 236,
    F64_REINTERPRET_I64	= 237,
    FALLTHROUGH_RETURN_EXCEPT_REF	= 238,
    FALLTHROUGH_RETURN_F32	= 239,
    FALLTHROUGH_RETURN_F64	= 240,
    FALLTHROUGH_RETURN_I32	= 241,
    FALLTHROUGH_RETURN_I64	= 242,
    FALLTHROUGH_RETURN_VOID	= 243,
    FALLTHROUGH_RETURN_v16i8	= 244,
    FALLTHROUGH_RETURN_v4f32	= 245,
    FALLTHROUGH_RETURN_v4i32	= 246,
    FALLTHROUGH_RETURN_v8i16	= 247,
    FLOOR_F32	= 248,
    FLOOR_F64	= 249,
    FP_TO_SINT_I32_F32	= 250,
    FP_TO_SINT_I32_F64	= 251,
    FP_TO_SINT_I64_F32	= 252,
    FP_TO_SINT_I64_F64	= 253,
    FP_TO_UINT_I32_F32	= 254,
    FP_TO_UINT_I32_F64	= 255,
    FP_TO_UINT_I64_F32	= 256,
    FP_TO_UINT_I64_F64	= 257,
    GET_GLOBAL_EXCEPT_REF	= 258,
    GET_GLOBAL_F32	= 259,
    GET_GLOBAL_F64	= 260,
    GET_GLOBAL_I32	= 261,
    GET_GLOBAL_I64	= 262,
    GET_GLOBAL_V128	= 263,
    GET_LOCAL_EXCEPT_REF	= 264,
    GET_LOCAL_F32	= 265,
    GET_LOCAL_F64	= 266,
    GET_LOCAL_I32	= 267,
    GET_LOCAL_I64	= 268,
    GET_LOCAL_V128	= 269,
    GE_F32	= 270,
    GE_F64	= 271,
    GE_S_I32	= 272,
    GE_S_I64	= 273,
    GE_U_I32	= 274,
    GE_U_I64	= 275,
    GROW_MEMORY_I32	= 276,
    GT_F32	= 277,
    GT_F64	= 278,
    GT_S_I32	= 279,
    GT_S_I64	= 280,
    GT_U_I32	= 281,
    GT_U_I64	= 282,
    I32_EXTEND16_S_I32	= 283,
    I32_EXTEND8_S_I32	= 284,
    I32_REINTERPRET_F32	= 285,
    I32_TRUNC_S_F32	= 286,
    I32_TRUNC_S_F64	= 287,
    I32_TRUNC_S_SAT_F32	= 288,
    I32_TRUNC_S_SAT_F64	= 289,
    I32_TRUNC_U_F32	= 290,
    I32_TRUNC_U_F64	= 291,
    I32_TRUNC_U_SAT_F32	= 292,
    I32_TRUNC_U_SAT_F64	= 293,
    I32_WRAP_I64	= 294,
    I64_EXTEND16_S_I64	= 295,
    I64_EXTEND32_S_I64	= 296,
    I64_EXTEND8_S_I64	= 297,
    I64_EXTEND_S_I32	= 298,
    I64_EXTEND_U_I32	= 299,
    I64_REINTERPRET_F64	= 300,
    I64_TRUNC_S_F32	= 301,
    I64_TRUNC_S_F64	= 302,
    I64_TRUNC_S_SAT_F32	= 303,
    I64_TRUNC_S_SAT_F64	= 304,
    I64_TRUNC_U_F32	= 305,
    I64_TRUNC_U_F64	= 306,
    I64_TRUNC_U_SAT_F32	= 307,
    I64_TRUNC_U_SAT_F64	= 308,
    LE_F32	= 309,
    LE_F64	= 310,
    LE_S_I32	= 311,
    LE_S_I64	= 312,
    LE_U_I32	= 313,
    LE_U_I64	= 314,
    LOAD16_S_I32	= 315,
    LOAD16_S_I64	= 316,
    LOAD16_U_I32	= 317,
    LOAD16_U_I64	= 318,
    LOAD32_S_I64	= 319,
    LOAD32_U_I64	= 320,
    LOAD8_S_I32	= 321,
    LOAD8_S_I64	= 322,
    LOAD8_U_I32	= 323,
    LOAD8_U_I64	= 324,
    LOAD_F32	= 325,
    LOAD_F64	= 326,
    LOAD_I32	= 327,
    LOAD_I64	= 328,
    LOOP	= 329,
    LT_F32	= 330,
    LT_F64	= 331,
    LT_S_I32	= 332,
    LT_S_I64	= 333,
    LT_U_I32	= 334,
    LT_U_I64	= 335,
    MAX_F32	= 336,
    MAX_F64	= 337,
    MEMORY_GROW_I32	= 338,
    MEMORY_SIZE_I32	= 339,
    MEM_GROW_I32	= 340,
    MEM_SIZE_I32	= 341,
    MIN_F32	= 342,
    MIN_F64	= 343,
    MUL_F32	= 344,
    MUL_F32x4	= 345,
    MUL_F64	= 346,
    MUL_I16x8	= 347,
    MUL_I32	= 348,
    MUL_I32x4	= 349,
    MUL_I64	= 350,
    MUL_I8x16	= 351,
    NEAREST_F32	= 352,
    NEAREST_F64	= 353,
    NEG_F32	= 354,
    NEG_F64	= 355,
    NE_F32	= 356,
    NE_F64	= 357,
    NE_I32	= 358,
    NE_I64	= 359,
    NOP	= 360,
    OR_I32	= 361,
    OR_I64	= 362,
    PCALL_INDIRECT_EXCEPT_REF	= 363,
    PCALL_INDIRECT_F32	= 364,
    PCALL_INDIRECT_F64	= 365,
    PCALL_INDIRECT_I32	= 366,
    PCALL_INDIRECT_I64	= 367,
    PCALL_INDIRECT_VOID	= 368,
    PCALL_INDIRECT_v16i8	= 369,
    PCALL_INDIRECT_v4f32	= 370,
    PCALL_INDIRECT_v4i32	= 371,
    PCALL_INDIRECT_v8i16	= 372,
    POPCNT_I32	= 373,
    POPCNT_I64	= 374,
    REM_S_I32	= 375,
    REM_S_I64	= 376,
    REM_U_I32	= 377,
    REM_U_I64	= 378,
    RETHROW	= 379,
    RETURN_EXCEPT_REF	= 380,
    RETURN_F32	= 381,
    RETURN_F64	= 382,
    RETURN_I32	= 383,
    RETURN_I64	= 384,
    RETURN_VOID	= 385,
    RETURN_v16i8	= 386,
    RETURN_v4f32	= 387,
    RETURN_v4i32	= 388,
    RETURN_v8i16	= 389,
    ROTL_I32	= 390,
    ROTL_I64	= 391,
    ROTR_I32	= 392,
    ROTR_I64	= 393,
    SELECT_EXCEPT_REF	= 394,
    SELECT_F32	= 395,
    SELECT_F64	= 396,
    SELECT_I32	= 397,
    SELECT_I64	= 398,
    SET_GLOBAL_EXCEPT_REF	= 399,
    SET_GLOBAL_F32	= 400,
    SET_GLOBAL_F64	= 401,
    SET_GLOBAL_I32	= 402,
    SET_GLOBAL_I64	= 403,
    SET_GLOBAL_V128	= 404,
    SET_LOCAL_EXCEPT_REF	= 405,
    SET_LOCAL_F32	= 406,
    SET_LOCAL_F64	= 407,
    SET_LOCAL_I32	= 408,
    SET_LOCAL_I64	= 409,
    SET_LOCAL_V128	= 410,
    SHL_I32	= 411,
    SHL_I64	= 412,
    SHR_S_I32	= 413,
    SHR_S_I64	= 414,
    SHR_U_I32	= 415,
    SHR_U_I64	= 416,
    SQRT_F32	= 417,
    SQRT_F64	= 418,
    STORE16_I32	= 419,
    STORE16_I64	= 420,
    STORE32_I64	= 421,
    STORE8_I32	= 422,
    STORE8_I64	= 423,
    STORE_F32	= 424,
    STORE_F64	= 425,
    STORE_I32	= 426,
    STORE_I64	= 427,
    SUB_F32	= 428,
    SUB_F32x4	= 429,
    SUB_F64	= 430,
    SUB_I16x8	= 431,
    SUB_I32	= 432,
    SUB_I32x4	= 433,
    SUB_I64	= 434,
    SUB_I8x16	= 435,
    TEE_EXCEPT_REF	= 436,
    TEE_F32	= 437,
    TEE_F64	= 438,
    TEE_I32	= 439,
    TEE_I64	= 440,
    TEE_LOCAL_EXCEPT_REF	= 441,
    TEE_LOCAL_F32	= 442,
    TEE_LOCAL_F64	= 443,
    TEE_LOCAL_I32	= 444,
    TEE_LOCAL_I64	= 445,
    TEE_LOCAL_V128	= 446,
    TEE_V128	= 447,
    THROW_I32	= 448,
    THROW_I64	= 449,
    TRUNC_F32	= 450,
    TRUNC_F64	= 451,
    TRY	= 452,
    UNREACHABLE	= 453,
    XOR_I32	= 454,
    XOR_I64	= 455,
    INSTRUCTION_LIST_END = 456
  };

} // end WebAssembly namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace WebAssembly {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    SCHED_LIST_END = 1
  };
} // end Sched namespace
} // end WebAssembly namespace
} // end llvm namespace
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { WebAssembly::ARGUMENTS, 0 };
static const MCPhysReg ImplicitList2[] = { WebAssembly::SP32, WebAssembly::SP64, 0 };
static const MCPhysReg ImplicitList3[] = { WebAssembly::VALUE_STACK, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXCEPT_REFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc WebAssemblyInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #5 = ANNOTATION_LABEL
  { 6,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #6 = KILL
  { 7,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #7 = EXTRACT_SUBREG
  { 8,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #8 = INSERT_SUBREG
  { 9,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #9 = IMPLICIT_DEF
  { 10,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #10 = SUBREG_TO_REG
  { 11,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #11 = COPY_TO_REGCLASS
  { 12,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #12 = DBG_VALUE
  { 13,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #13 = DBG_LABEL
  { 14,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #14 = REG_SEQUENCE
  { 15,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #15 = COPY
  { 16,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #16 = BUNDLE
  { 17,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #17 = LIFETIME_START
  { 18,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #18 = LIFETIME_END
  { 19,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #19 = STACKMAP
  { 20,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #20 = FENTRY_CALL
  { 21,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #21 = PATCHPOINT
  { 22,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #22 = LOAD_STACK_GUARD
  { 23,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #23 = STATEPOINT
  { 24,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #24 = LOCAL_ESCAPE
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #25 = FAULTING_OP
  { 26,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #26 = PATCHABLE_OP
  { 27,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #27 = PATCHABLE_FUNCTION_ENTER
  { 28,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #28 = PATCHABLE_RET
  { 29,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #29 = PATCHABLE_FUNCTION_EXIT
  { 30,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #30 = PATCHABLE_TAIL_CALL
  { 31,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #31 = PATCHABLE_EVENT_CALL
  { 32,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = PATCHABLE_TYPED_EVENT_CALL
  { 33,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #33 = ICALL_BRANCH_FUNNEL
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #34 = G_ADD
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #35 = G_SUB
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #36 = G_MUL
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #37 = G_SDIV
  { 38,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #38 = G_UDIV
  { 39,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #39 = G_SREM
  { 40,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #40 = G_UREM
  { 41,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #41 = G_AND
  { 42,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #42 = G_OR
  { 43,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #43 = G_XOR
  { 44,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #44 = G_IMPLICIT_DEF
  { 45,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #45 = G_PHI
  { 46,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #46 = G_FRAME_INDEX
  { 47,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #47 = G_GLOBAL_VALUE
  { 48,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #48 = G_EXTRACT
  { 49,	2,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #49 = G_UNMERGE_VALUES
  { 50,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #50 = G_INSERT
  { 51,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #51 = G_MERGE_VALUES
  { 52,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #52 = G_PTRTOINT
  { 53,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #53 = G_INTTOPTR
  { 54,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #54 = G_BITCAST
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #55 = G_LOAD
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #56 = G_SEXTLOAD
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #57 = G_ZEXTLOAD
  { 58,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #58 = G_STORE
  { 59,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #59 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 60,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #60 = G_ATOMIC_CMPXCHG
  { 61,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #61 = G_ATOMICRMW_XCHG
  { 62,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #62 = G_ATOMICRMW_ADD
  { 63,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #63 = G_ATOMICRMW_SUB
  { 64,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #64 = G_ATOMICRMW_AND
  { 65,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #65 = G_ATOMICRMW_NAND
  { 66,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #66 = G_ATOMICRMW_OR
  { 67,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #67 = G_ATOMICRMW_XOR
  { 68,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #68 = G_ATOMICRMW_MAX
  { 69,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #69 = G_ATOMICRMW_MIN
  { 70,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #70 = G_ATOMICRMW_UMAX
  { 71,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #71 = G_ATOMICRMW_UMIN
  { 72,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #72 = G_BRCOND
  { 73,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #73 = G_BRINDIRECT
  { 74,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #74 = G_INTRINSIC
  { 75,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #75 = G_INTRINSIC_W_SIDE_EFFECTS
  { 76,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #76 = G_ANYEXT
  { 77,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #77 = G_TRUNC
  { 78,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #78 = G_CONSTANT
  { 79,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #79 = G_FCONSTANT
  { 80,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #80 = G_VASTART
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #81 = G_VAARG
  { 82,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #82 = G_SEXT
  { 83,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #83 = G_ZEXT
  { 84,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #84 = G_SHL
  { 85,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #85 = G_LSHR
  { 86,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #86 = G_ASHR
  { 87,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #87 = G_ICMP
  { 88,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #88 = G_FCMP
  { 89,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #89 = G_SELECT
  { 90,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #90 = G_UADDE
  { 91,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #91 = G_USUBE
  { 92,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #92 = G_SADDO
  { 93,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #93 = G_SSUBO
  { 94,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #94 = G_UMULO
  { 95,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #95 = G_SMULO
  { 96,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #96 = G_UMULH
  { 97,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #97 = G_SMULH
  { 98,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #98 = G_FADD
  { 99,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #99 = G_FSUB
  { 100,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #100 = G_FMUL
  { 101,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #101 = G_FMA
  { 102,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #102 = G_FDIV
  { 103,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #103 = G_FREM
  { 104,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #104 = G_FPOW
  { 105,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #105 = G_FEXP
  { 106,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #106 = G_FEXP2
  { 107,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #107 = G_FLOG
  { 108,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #108 = G_FLOG2
  { 109,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #109 = G_FNEG
  { 110,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #110 = G_FPEXT
  { 111,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #111 = G_FPTRUNC
  { 112,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #112 = G_FPTOSI
  { 113,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #113 = G_FPTOUI
  { 114,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #114 = G_SITOFP
  { 115,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #115 = G_UITOFP
  { 116,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #116 = G_FABS
  { 117,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #117 = G_GEP
  { 118,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #118 = G_PTR_MASK
  { 119,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #119 = G_BR
  { 120,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #120 = G_INSERT_VECTOR_ELT
  { 121,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #121 = G_EXTRACT_VECTOR_ELT
  { 122,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #122 = G_SHUFFLE_VECTOR
  { 123,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #123 = G_BSWAP
  { 124,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #124 = ABS_F32
  { 125,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #125 = ABS_F64
  { 126,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #126 = ADD_F32
  { 127,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #127 = ADD_F32x4
  { 128,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #128 = ADD_F64
  { 129,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #129 = ADD_I16x8
  { 130,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #130 = ADD_I32
  { 131,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #131 = ADD_I32x4
  { 132,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #132 = ADD_I64
  { 133,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #133 = ADD_I8x16
  { 134,	2,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #134 = ADJCALLSTACKDOWN
  { 135,	2,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #135 = ADJCALLSTACKUP
  { 136,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #136 = AND_I32
  { 137,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #137 = AND_I64
  { 138,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #138 = ARGUMENT_EXCEPT_REF
  { 139,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #139 = ARGUMENT_F32
  { 140,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #140 = ARGUMENT_F64
  { 141,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #141 = ARGUMENT_I32
  { 142,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #142 = ARGUMENT_I64
  { 143,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #143 = ARGUMENT_v16i8
  { 144,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #144 = ARGUMENT_v4f32
  { 145,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #145 = ARGUMENT_v4i32
  { 146,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #146 = ARGUMENT_v8i16
  { 147,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #147 = ATOMIC_LOAD16_U_I32
  { 148,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #148 = ATOMIC_LOAD16_U_I64
  { 149,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #149 = ATOMIC_LOAD32_U_I64
  { 150,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #150 = ATOMIC_LOAD8_U_I32
  { 151,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #151 = ATOMIC_LOAD8_U_I64
  { 152,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #152 = ATOMIC_LOAD_I32
  { 153,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #153 = ATOMIC_LOAD_I64
  { 154,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo46, -1 ,nullptr },  // Inst #154 = BLOCK
  { 155,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo47, -1 ,nullptr },  // Inst #155 = BR
  { 156,	2,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo48, -1 ,nullptr },  // Inst #156 = BR_IF
  { 157,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x3ULL, nullptr, ImplicitList1, OperandInfo49, -1 ,nullptr },  // Inst #157 = BR_TABLE_I32
  { 158,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x3ULL, nullptr, ImplicitList1, OperandInfo50, -1 ,nullptr },  // Inst #158 = BR_TABLE_I64
  { 159,	2,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo48, -1 ,nullptr },  // Inst #159 = BR_UNLESS
  { 160,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo51, -1 ,nullptr },  // Inst #160 = CALL_EXCEPT_REF
  { 161,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo52, -1 ,nullptr },  // Inst #161 = CALL_F32
  { 162,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo53, -1 ,nullptr },  // Inst #162 = CALL_F64
  { 163,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo54, -1 ,nullptr },  // Inst #163 = CALL_I32
  { 164,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo55, -1 ,nullptr },  // Inst #164 = CALL_I64
  { 165,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo56, -1 ,nullptr },  // Inst #165 = CALL_INDIRECT_EXCEPT_REF
  { 166,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo57, -1 ,nullptr },  // Inst #166 = CALL_INDIRECT_F32
  { 167,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo58, -1 ,nullptr },  // Inst #167 = CALL_INDIRECT_F64
  { 168,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo59, -1 ,nullptr },  // Inst #168 = CALL_INDIRECT_I32
  { 169,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo60, -1 ,nullptr },  // Inst #169 = CALL_INDIRECT_I64
  { 170,	2,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo61, -1 ,nullptr },  // Inst #170 = CALL_INDIRECT_VOID
  { 171,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo62, -1 ,nullptr },  // Inst #171 = CALL_INDIRECT_v16i8
  { 172,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo62, -1 ,nullptr },  // Inst #172 = CALL_INDIRECT_v4f32
  { 173,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo62, -1 ,nullptr },  // Inst #173 = CALL_INDIRECT_v4i32
  { 174,	3,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo62, -1 ,nullptr },  // Inst #174 = CALL_INDIRECT_v8i16
  { 175,	1,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo63, -1 ,nullptr },  // Inst #175 = CALL_VOID
  { 176,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo64, -1 ,nullptr },  // Inst #176 = CALL_v16i8
  { 177,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo64, -1 ,nullptr },  // Inst #177 = CALL_v4f32
  { 178,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo64, -1 ,nullptr },  // Inst #178 = CALL_v4i32
  { 179,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo64, -1 ,nullptr },  // Inst #179 = CALL_v8i16
  { 180,	2,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo65, -1 ,nullptr },  // Inst #180 = CATCHRET
  { 181,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #181 = CATCH_ALL
  { 182,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #182 = CATCH_I32
  { 183,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo42, -1 ,nullptr },  // Inst #183 = CATCH_I64
  { 184,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #184 = CEIL_F32
  { 185,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #185 = CEIL_F64
  { 186,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #186 = CLEANUPRET
  { 187,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #187 = CLZ_I32
  { 188,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo67, -1 ,nullptr },  // Inst #188 = CLZ_I64
  { 189,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo68, -1 ,nullptr },  // Inst #189 = CONST_F32
  { 190,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo69, -1 ,nullptr },  // Inst #190 = CONST_F64
  { 191,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo70, -1 ,nullptr },  // Inst #191 = CONST_I32
  { 192,	2,	1,	0,	0,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo71, -1 ,nullptr },  // Inst #192 = CONST_I64
  { 193,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #193 = COPYSIGN_F32
  { 194,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #194 = COPYSIGN_F64
  { 195,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo72, -1 ,nullptr },  // Inst #195 = COPY_EXCEPT_REF
  { 196,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #196 = COPY_F32
  { 197,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #197 = COPY_F64
  { 198,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #198 = COPY_I32
  { 199,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo67, -1 ,nullptr },  // Inst #199 = COPY_I64
  { 200,	2,	1,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo73, -1 ,nullptr },  // Inst #200 = COPY_V128
  { 201,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #201 = CTZ_I32
  { 202,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo67, -1 ,nullptr },  // Inst #202 = CTZ_I64
  { 203,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #203 = CURRENT_MEMORY_I32
  { 204,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #204 = DIV_F32
  { 205,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #205 = DIV_F64
  { 206,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #206 = DIV_S_I32
  { 207,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #207 = DIV_S_I64
  { 208,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #208 = DIV_U_I32
  { 209,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #209 = DIV_U_I64
  { 210,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo74, -1 ,nullptr },  // Inst #210 = DROP_EXCEPT_REF
  { 211,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo75, -1 ,nullptr },  // Inst #211 = DROP_F32
  { 212,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo76, -1 ,nullptr },  // Inst #212 = DROP_F64
  { 213,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo49, -1 ,nullptr },  // Inst #213 = DROP_I32
  { 214,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo50, -1 ,nullptr },  // Inst #214 = DROP_I64
  { 215,	1,	0,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #215 = DROP_V128
  { 216,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr, -1 ,nullptr },  // Inst #216 = END_BLOCK
  { 217,	0,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr, -1 ,nullptr },  // Inst #217 = END_FUNCTION
  { 218,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr, -1 ,nullptr },  // Inst #218 = END_LOOP
  { 219,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, nullptr, -1 ,nullptr },  // Inst #219 = END_TRY
  { 220,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #220 = EQZ_I32
  { 221,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo78, -1 ,nullptr },  // Inst #221 = EQZ_I64
  { 222,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo79, -1 ,nullptr },  // Inst #222 = EQ_F32
  { 223,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo80, -1 ,nullptr },  // Inst #223 = EQ_F64
  { 224,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #224 = EQ_I32
  { 225,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #225 = EQ_I64
  { 226,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo82, -1 ,nullptr },  // Inst #226 = F32_CONVERT_S_I32
  { 227,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo83, -1 ,nullptr },  // Inst #227 = F32_CONVERT_S_I64
  { 228,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo82, -1 ,nullptr },  // Inst #228 = F32_CONVERT_U_I32
  { 229,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo83, -1 ,nullptr },  // Inst #229 = F32_CONVERT_U_I64
  { 230,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo84, -1 ,nullptr },  // Inst #230 = F32_DEMOTE_F64
  { 231,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo82, -1 ,nullptr },  // Inst #231 = F32_REINTERPRET_I32
  { 232,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo85, -1 ,nullptr },  // Inst #232 = F64_CONVERT_S_I32
  { 233,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo86, -1 ,nullptr },  // Inst #233 = F64_CONVERT_S_I64
  { 234,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo85, -1 ,nullptr },  // Inst #234 = F64_CONVERT_U_I32
  { 235,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo86, -1 ,nullptr },  // Inst #235 = F64_CONVERT_U_I64
  { 236,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo87, -1 ,nullptr },  // Inst #236 = F64_PROMOTE_F32
  { 237,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo86, -1 ,nullptr },  // Inst #237 = F64_REINTERPRET_I64
  { 238,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo74, -1 ,nullptr },  // Inst #238 = FALLTHROUGH_RETURN_EXCEPT_REF
  { 239,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo75, -1 ,nullptr },  // Inst #239 = FALLTHROUGH_RETURN_F32
  { 240,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo76, -1 ,nullptr },  // Inst #240 = FALLTHROUGH_RETURN_F64
  { 241,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo49, -1 ,nullptr },  // Inst #241 = FALLTHROUGH_RETURN_I32
  { 242,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo50, -1 ,nullptr },  // Inst #242 = FALLTHROUGH_RETURN_I64
  { 243,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #243 = FALLTHROUGH_RETURN_VOID
  { 244,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #244 = FALLTHROUGH_RETURN_v16i8
  { 245,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #245 = FALLTHROUGH_RETURN_v4f32
  { 246,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #246 = FALLTHROUGH_RETURN_v4i32
  { 247,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #247 = FALLTHROUGH_RETURN_v8i16
  { 248,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #248 = FLOOR_F32
  { 249,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #249 = FLOOR_F64
  { 250,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #250 = FP_TO_SINT_I32_F32
  { 251,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #251 = FP_TO_SINT_I32_F64
  { 252,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo90, -1 ,nullptr },  // Inst #252 = FP_TO_SINT_I64_F32
  { 253,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #253 = FP_TO_SINT_I64_F64
  { 254,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #254 = FP_TO_UINT_I32_F32
  { 255,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #255 = FP_TO_UINT_I32_F64
  { 256,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo90, -1 ,nullptr },  // Inst #256 = FP_TO_UINT_I64_F32
  { 257,	2,	1,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #257 = FP_TO_UINT_I64_F64
  { 258,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo92, -1 ,nullptr },  // Inst #258 = GET_GLOBAL_EXCEPT_REF
  { 259,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo93, -1 ,nullptr },  // Inst #259 = GET_GLOBAL_F32
  { 260,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo94, -1 ,nullptr },  // Inst #260 = GET_GLOBAL_F64
  { 261,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo95, -1 ,nullptr },  // Inst #261 = GET_GLOBAL_I32
  { 262,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo96, -1 ,nullptr },  // Inst #262 = GET_GLOBAL_I64
  { 263,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo97, -1 ,nullptr },  // Inst #263 = GET_GLOBAL_V128
  { 264,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo98, -1 ,nullptr },  // Inst #264 = GET_LOCAL_EXCEPT_REF
  { 265,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo99, -1 ,nullptr },  // Inst #265 = GET_LOCAL_F32
  { 266,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo100, -1 ,nullptr },  // Inst #266 = GET_LOCAL_F64
  { 267,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo101, -1 ,nullptr },  // Inst #267 = GET_LOCAL_I32
  { 268,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo102, -1 ,nullptr },  // Inst #268 = GET_LOCAL_I64
  { 269,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo103, -1 ,nullptr },  // Inst #269 = GET_LOCAL_V128
  { 270,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo79, -1 ,nullptr },  // Inst #270 = GE_F32
  { 271,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo80, -1 ,nullptr },  // Inst #271 = GE_F64
  { 272,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #272 = GE_S_I32
  { 273,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #273 = GE_S_I64
  { 274,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #274 = GE_U_I32
  { 275,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #275 = GE_U_I64
  { 276,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo104, -1 ,nullptr },  // Inst #276 = GROW_MEMORY_I32
  { 277,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo79, -1 ,nullptr },  // Inst #277 = GT_F32
  { 278,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo80, -1 ,nullptr },  // Inst #278 = GT_F64
  { 279,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #279 = GT_S_I32
  { 280,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #280 = GT_S_I64
  { 281,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #281 = GT_U_I32
  { 282,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #282 = GT_U_I64
  { 283,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #283 = I32_EXTEND16_S_I32
  { 284,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #284 = I32_EXTEND8_S_I32
  { 285,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #285 = I32_REINTERPRET_F32
  { 286,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #286 = I32_TRUNC_S_F32
  { 287,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #287 = I32_TRUNC_S_F64
  { 288,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #288 = I32_TRUNC_S_SAT_F32
  { 289,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #289 = I32_TRUNC_S_SAT_F64
  { 290,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #290 = I32_TRUNC_U_F32
  { 291,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #291 = I32_TRUNC_U_F64
  { 292,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo88, -1 ,nullptr },  // Inst #292 = I32_TRUNC_U_SAT_F32
  { 293,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #293 = I32_TRUNC_U_SAT_F64
  { 294,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo78, -1 ,nullptr },  // Inst #294 = I32_WRAP_I64
  { 295,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo67, -1 ,nullptr },  // Inst #295 = I64_EXTEND16_S_I64
  { 296,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo67, -1 ,nullptr },  // Inst #296 = I64_EXTEND32_S_I64
  { 297,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo67, -1 ,nullptr },  // Inst #297 = I64_EXTEND8_S_I64
  { 298,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo105, -1 ,nullptr },  // Inst #298 = I64_EXTEND_S_I32
  { 299,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo105, -1 ,nullptr },  // Inst #299 = I64_EXTEND_U_I32
  { 300,	2,	1,	0,	0,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #300 = I64_REINTERPRET_F64
  { 301,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo90, -1 ,nullptr },  // Inst #301 = I64_TRUNC_S_F32
  { 302,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #302 = I64_TRUNC_S_F64
  { 303,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo90, -1 ,nullptr },  // Inst #303 = I64_TRUNC_S_SAT_F32
  { 304,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #304 = I64_TRUNC_S_SAT_F64
  { 305,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo90, -1 ,nullptr },  // Inst #305 = I64_TRUNC_U_F32
  { 306,	2,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #306 = I64_TRUNC_U_F64
  { 307,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo90, -1 ,nullptr },  // Inst #307 = I64_TRUNC_U_SAT_F32
  { 308,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo91, -1 ,nullptr },  // Inst #308 = I64_TRUNC_U_SAT_F64
  { 309,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo79, -1 ,nullptr },  // Inst #309 = LE_F32
  { 310,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo80, -1 ,nullptr },  // Inst #310 = LE_F64
  { 311,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #311 = LE_S_I32
  { 312,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #312 = LE_S_I64
  { 313,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #313 = LE_U_I32
  { 314,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #314 = LE_U_I64
  { 315,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #315 = LOAD16_S_I32
  { 316,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #316 = LOAD16_S_I64
  { 317,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #317 = LOAD16_U_I32
  { 318,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #318 = LOAD16_U_I64
  { 319,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #319 = LOAD32_S_I64
  { 320,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #320 = LOAD32_U_I64
  { 321,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #321 = LOAD8_S_I32
  { 322,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #322 = LOAD8_S_I64
  { 323,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #323 = LOAD8_U_I32
  { 324,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #324 = LOAD8_U_I64
  { 325,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo106, -1 ,nullptr },  // Inst #325 = LOAD_F32
  { 326,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo107, -1 ,nullptr },  // Inst #326 = LOAD_F64
  { 327,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo44, -1 ,nullptr },  // Inst #327 = LOAD_I32
  { 328,	4,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo45, -1 ,nullptr },  // Inst #328 = LOAD_I64
  { 329,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo46, -1 ,nullptr },  // Inst #329 = LOOP
  { 330,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo79, -1 ,nullptr },  // Inst #330 = LT_F32
  { 331,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo80, -1 ,nullptr },  // Inst #331 = LT_F64
  { 332,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #332 = LT_S_I32
  { 333,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #333 = LT_S_I64
  { 334,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #334 = LT_U_I32
  { 335,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #335 = LT_U_I64
  { 336,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #336 = MAX_F32
  { 337,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #337 = MAX_F64
  { 338,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo104, -1 ,nullptr },  // Inst #338 = MEMORY_GROW_I32
  { 339,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #339 = MEMORY_SIZE_I32
  { 340,	3,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo104, -1 ,nullptr },  // Inst #340 = MEM_GROW_I32
  { 341,	2,	1,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #341 = MEM_SIZE_I32
  { 342,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #342 = MIN_F32
  { 343,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #343 = MIN_F64
  { 344,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #344 = MUL_F32
  { 345,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #345 = MUL_F32x4
  { 346,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #346 = MUL_F64
  { 347,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #347 = MUL_I16x8
  { 348,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #348 = MUL_I32
  { 349,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #349 = MUL_I32x4
  { 350,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #350 = MUL_I64
  { 351,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #351 = MUL_I8x16
  { 352,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #352 = NEAREST_F32
  { 353,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #353 = NEAREST_F64
  { 354,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #354 = NEG_F32
  { 355,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #355 = NEG_F64
  { 356,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo79, -1 ,nullptr },  // Inst #356 = NE_F32
  { 357,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo80, -1 ,nullptr },  // Inst #357 = NE_F64
  { 358,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #358 = NE_I32
  { 359,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo81, -1 ,nullptr },  // Inst #359 = NE_I64
  { 360,	0,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #360 = NOP
  { 361,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #361 = OR_I32
  { 362,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #362 = OR_I64
  { 363,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo108, -1 ,nullptr },  // Inst #363 = PCALL_INDIRECT_EXCEPT_REF
  { 364,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo82, -1 ,nullptr },  // Inst #364 = PCALL_INDIRECT_F32
  { 365,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo85, -1 ,nullptr },  // Inst #365 = PCALL_INDIRECT_F64
  { 366,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #366 = PCALL_INDIRECT_I32
  { 367,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo105, -1 ,nullptr },  // Inst #367 = PCALL_INDIRECT_I64
  { 368,	1,	0,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo49, -1 ,nullptr },  // Inst #368 = PCALL_INDIRECT_VOID
  { 369,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo109, -1 ,nullptr },  // Inst #369 = PCALL_INDIRECT_v16i8
  { 370,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo109, -1 ,nullptr },  // Inst #370 = PCALL_INDIRECT_v4f32
  { 371,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo109, -1 ,nullptr },  // Inst #371 = PCALL_INDIRECT_v4i32
  { 372,	2,	1,	0,	0,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, ImplicitList1, OperandInfo109, -1 ,nullptr },  // Inst #372 = PCALL_INDIRECT_v8i16
  { 373,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo66, -1 ,nullptr },  // Inst #373 = POPCNT_I32
  { 374,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo67, -1 ,nullptr },  // Inst #374 = POPCNT_I64
  { 375,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #375 = REM_S_I32
  { 376,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #376 = REM_S_I64
  { 377,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #377 = REM_U_I32
  { 378,	3,	1,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #378 = REM_U_I64
  { 379,	1,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo3, -1 ,nullptr },  // Inst #379 = RETHROW
  { 380,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo74, -1 ,nullptr },  // Inst #380 = RETURN_EXCEPT_REF
  { 381,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo75, -1 ,nullptr },  // Inst #381 = RETURN_F32
  { 382,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo76, -1 ,nullptr },  // Inst #382 = RETURN_F64
  { 383,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo49, -1 ,nullptr },  // Inst #383 = RETURN_I32
  { 384,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo50, -1 ,nullptr },  // Inst #384 = RETURN_I64
  { 385,	0,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #385 = RETURN_VOID
  { 386,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #386 = RETURN_v16i8
  { 387,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #387 = RETURN_v4f32
  { 388,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #388 = RETURN_v4i32
  { 389,	1,	0,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo77, -1 ,nullptr },  // Inst #389 = RETURN_v8i16
  { 390,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #390 = ROTL_I32
  { 391,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #391 = ROTL_I64
  { 392,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #392 = ROTR_I32
  { 393,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #393 = ROTR_I64
  { 394,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo110, -1 ,nullptr },  // Inst #394 = SELECT_EXCEPT_REF
  { 395,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo111, -1 ,nullptr },  // Inst #395 = SELECT_F32
  { 396,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo112, -1 ,nullptr },  // Inst #396 = SELECT_F64
  { 397,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo113, -1 ,nullptr },  // Inst #397 = SELECT_I32
  { 398,	4,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo114, -1 ,nullptr },  // Inst #398 = SELECT_I64
  { 399,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo115, -1 ,nullptr },  // Inst #399 = SET_GLOBAL_EXCEPT_REF
  { 400,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo116, -1 ,nullptr },  // Inst #400 = SET_GLOBAL_F32
  { 401,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo117, -1 ,nullptr },  // Inst #401 = SET_GLOBAL_F64
  { 402,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo118, -1 ,nullptr },  // Inst #402 = SET_GLOBAL_I32
  { 403,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo119, -1 ,nullptr },  // Inst #403 = SET_GLOBAL_I64
  { 404,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo120, -1 ,nullptr },  // Inst #404 = SET_GLOBAL_V128
  { 405,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo121, -1 ,nullptr },  // Inst #405 = SET_LOCAL_EXCEPT_REF
  { 406,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo122, -1 ,nullptr },  // Inst #406 = SET_LOCAL_F32
  { 407,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo123, -1 ,nullptr },  // Inst #407 = SET_LOCAL_F64
  { 408,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo124, -1 ,nullptr },  // Inst #408 = SET_LOCAL_I32
  { 409,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo125, -1 ,nullptr },  // Inst #409 = SET_LOCAL_I64
  { 410,	2,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo126, -1 ,nullptr },  // Inst #410 = SET_LOCAL_V128
  { 411,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #411 = SHL_I32
  { 412,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #412 = SHL_I64
  { 413,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #413 = SHR_S_I32
  { 414,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #414 = SHR_S_I64
  { 415,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #415 = SHR_U_I32
  { 416,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #416 = SHR_U_I64
  { 417,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #417 = SQRT_F32
  { 418,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #418 = SQRT_F64
  { 419,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo127, -1 ,nullptr },  // Inst #419 = STORE16_I32
  { 420,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo128, -1 ,nullptr },  // Inst #420 = STORE16_I64
  { 421,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo128, -1 ,nullptr },  // Inst #421 = STORE32_I64
  { 422,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo127, -1 ,nullptr },  // Inst #422 = STORE8_I32
  { 423,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo128, -1 ,nullptr },  // Inst #423 = STORE8_I64
  { 424,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo129, -1 ,nullptr },  // Inst #424 = STORE_F32
  { 425,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo130, -1 ,nullptr },  // Inst #425 = STORE_F64
  { 426,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo127, -1 ,nullptr },  // Inst #426 = STORE_I32
  { 427,	4,	0,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo128, -1 ,nullptr },  // Inst #427 = STORE_I64
  { 428,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #428 = SUB_F32
  { 429,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #429 = SUB_F32x4
  { 430,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #430 = SUB_F64
  { 431,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #431 = SUB_I16x8
  { 432,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #432 = SUB_I32
  { 433,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #433 = SUB_I32x4
  { 434,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #434 = SUB_I64
  { 435,	3,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #435 = SUB_I8x16
  { 436,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo131, -1 ,nullptr },  // Inst #436 = TEE_EXCEPT_REF
  { 437,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo33, -1 ,nullptr },  // Inst #437 = TEE_F32
  { 438,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #438 = TEE_F64
  { 439,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #439 = TEE_I32
  { 440,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #440 = TEE_I64
  { 441,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo132, -1 ,nullptr },  // Inst #441 = TEE_LOCAL_EXCEPT_REF
  { 442,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo133, -1 ,nullptr },  // Inst #442 = TEE_LOCAL_F32
  { 443,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo134, -1 ,nullptr },  // Inst #443 = TEE_LOCAL_F64
  { 444,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo135, -1 ,nullptr },  // Inst #444 = TEE_LOCAL_I32
  { 445,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo136, -1 ,nullptr },  // Inst #445 = TEE_LOCAL_I64
  { 446,	3,	1,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo137, -1 ,nullptr },  // Inst #446 = TEE_LOCAL_V128
  { 447,	3,	2,	0,	0,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #447 = TEE_V128
  { 448,	2,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo138, -1 ,nullptr },  // Inst #448 = THROW_I32
  { 449,	2,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo139, -1 ,nullptr },  // Inst #449 = THROW_I64
  { 450,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo31, -1 ,nullptr },  // Inst #450 = TRUNC_F32
  { 451,	2,	1,	0,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo32, -1 ,nullptr },  // Inst #451 = TRUNC_F64
  { 452,	1,	0,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, ImplicitList3, OperandInfo46, -1 ,nullptr },  // Inst #452 = TRY
  { 453,	0,	0,	0,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, nullptr, -1 ,nullptr },  // Inst #453 = UNREACHABLE
  { 454,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo36, -1 ,nullptr },  // Inst #454 = XOR_I32
  { 455,	3,	1,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList1, OperandInfo37, -1 ,nullptr },  // Inst #455 = XOR_I64
};

extern const char WebAssemblyInstrNameData[] = {
  /* 0 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '3', '2', 0,
  /* 19 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '3', '2', 0,
  /* 38 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '3', '2', 0,
  /* 57 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '3', '2', 0,
  /* 76 */ 'S', 'U', 'B', '_', 'F', '3', '2', 0,
  /* 84 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '3', '2', 0,
  /* 94 */ 'L', 'O', 'A', 'D', '_', 'F', '3', '2', 0,
  /* 103 */ 'A', 'D', 'D', '_', 'F', '3', '2', 0,
  /* 111 */ 'T', 'E', 'E', '_', 'F', '3', '2', 0,
  /* 119 */ 'G', 'E', '_', 'F', '3', '2', 0,
  /* 126 */ 'L', 'E', '_', 'F', '3', '2', 0,
  /* 133 */ 'N', 'E', '_', 'F', '3', '2', 0,
  /* 140 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '3', '2', 0,
  /* 150 */ 'F', '6', '4', '_', 'P', 'R', 'O', 'M', 'O', 'T', 'E', '_', 'F', '3', '2', 0,
  /* 166 */ 'N', 'E', 'G', '_', 'F', '3', '2', 0,
  /* 174 */ 'G', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'F', '3', '2', 0,
  /* 189 */ 'S', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'F', '3', '2', 0,
  /* 204 */ 'T', 'E', 'E', '_', 'L', 'O', 'C', 'A', 'L', '_', 'F', '3', '2', 0,
  /* 218 */ 'G', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'F', '3', '2', 0,
  /* 232 */ 'S', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'F', '3', '2', 0,
  /* 246 */ 'C', 'E', 'I', 'L', '_', 'F', '3', '2', 0,
  /* 255 */ 'C', 'A', 'L', 'L', '_', 'F', '3', '2', 0,
  /* 264 */ 'M', 'U', 'L', '_', 'F', '3', '2', 0,
  /* 272 */ 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', '_', 'F', '3', '2', 0,
  /* 285 */ 'M', 'I', 'N', '_', 'F', '3', '2', 0,
  /* 293 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'F', '3', '2', 0,
  /* 316 */ 'D', 'R', 'O', 'P', '_', 'F', '3', '2', 0,
  /* 325 */ 'E', 'Q', '_', 'F', '3', '2', 0,
  /* 332 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '3', '2', 0,
  /* 342 */ 'A', 'B', 'S', '_', 'F', '3', '2', 0,
  /* 350 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '3', '2', 0,
  /* 366 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '3', '2', 0,
  /* 382 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 402 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 422 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 442 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '3', '2', 0,
  /* 462 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '3', '2', 0,
  /* 473 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'F', '3', '2', 0,
  /* 492 */ 'I', '3', '2', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'F', '3', '2', 0,
  /* 512 */ 'G', 'T', '_', 'F', '3', '2', 0,
  /* 519 */ 'L', 'T', '_', 'F', '3', '2', 0,
  /* 526 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'F', '3', '2', 0,
  /* 539 */ 'S', 'Q', 'R', 'T', '_', 'F', '3', '2', 0,
  /* 548 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '3', '2', 0,
  /* 560 */ 'C', 'O', 'N', 'S', 'T', '_', 'F', '3', '2', 0,
  /* 570 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '3', '2', 0,
  /* 586 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '3', '2', 0,
  /* 602 */ 'D', 'I', 'V', '_', 'F', '3', '2', 0,
  /* 610 */ 'M', 'A', 'X', '_', 'F', '3', '2', 0,
  /* 618 */ 'C', 'O', 'P', 'Y', '_', 'F', '3', '2', 0,
  /* 627 */ 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '3', '2', 0,
  /* 639 */ 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '3', '2', 0,
  /* 650 */ 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 658 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '3', '2', 0,
  /* 674 */ 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 682 */ 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 690 */ 'T', 'E', 'E', '_', 'I', '3', '2', 0,
  /* 698 */ 'B', 'R', '_', 'T', 'A', 'B', 'L', 'E', '_', 'I', '3', '2', 0,
  /* 711 */ 'N', 'E', '_', 'I', '3', '2', 0,
  /* 718 */ 'S', 'T', 'O', 'R', 'E', '_', 'I', '3', '2', 0,
  /* 728 */ 'M', 'E', 'M', '_', 'S', 'I', 'Z', 'E', '_', 'I', '3', '2', 0,
  /* 741 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'S', 'I', 'Z', 'E', '_', 'I', '3', '2', 0,
  /* 757 */ 'C', 'A', 'T', 'C', 'H', '_', 'I', '3', '2', 0,
  /* 767 */ 'G', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'I', '3', '2', 0,
  /* 782 */ 'S', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'I', '3', '2', 0,
  /* 797 */ 'T', 'E', 'E', '_', 'L', 'O', 'C', 'A', 'L', '_', 'I', '3', '2', 0,
  /* 811 */ 'G', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'I', '3', '2', 0,
  /* 825 */ 'S', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'I', '3', '2', 0,
  /* 839 */ 'S', 'H', 'L', '_', 'I', '3', '2', 0,
  /* 847 */ 'C', 'A', 'L', 'L', '_', 'I', '3', '2', 0,
  /* 856 */ 'R', 'O', 'T', 'L', '_', 'I', '3', '2', 0,
  /* 865 */ 'M', 'U', 'L', '_', 'I', '3', '2', 0,
  /* 873 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'I', '3', '2', 0,
  /* 896 */ 'D', 'R', 'O', 'P', '_', 'I', '3', '2', 0,
  /* 905 */ 'E', 'Q', '_', 'I', '3', '2', 0,
  /* 912 */ 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 920 */ 'R', 'O', 'T', 'R', '_', 'I', '3', '2', 0,
  /* 929 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', 0,
  /* 942 */ 'I', '3', '2', '_', 'E', 'X', 'T', 'E', 'N', 'D', '1', '6', '_', 'S', '_', 'I', '3', '2', 0,
  /* 961 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '3', '2', 0,
  /* 973 */ 'I', '3', '2', '_', 'E', 'X', 'T', 'E', 'N', 'D', '8', '_', 'S', '_', 'I', '3', '2', 0,
  /* 991 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1008 */ 'G', 'E', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1017 */ 'L', 'E', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1026 */ 'R', 'E', 'M', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1036 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1046 */ 'G', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1055 */ 'L', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1064 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1082 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1100 */ 'D', 'I', 'V', '_', 'S', '_', 'I', '3', '2', 0,
  /* 1110 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '3', '2', 0,
  /* 1121 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'I', '3', '2', 0,
  /* 1140 */ 'F', '3', '2', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'I', '3', '2', 0,
  /* 1160 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '3', '2', 0,
  /* 1171 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'I', '3', '2', 0,
  /* 1184 */ 'C', 'O', 'N', 'S', 'T', '_', 'I', '3', '2', 0,
  /* 1194 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1214 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1233 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1250 */ 'G', 'E', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1259 */ 'L', 'E', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1268 */ 'R', 'E', 'M', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1278 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1288 */ 'G', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1297 */ 'L', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1306 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1324 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1342 */ 'D', 'I', 'V', '_', 'U', '_', 'I', '3', '2', 0,
  /* 1352 */ 'M', 'E', 'M', '_', 'G', 'R', 'O', 'W', '_', 'I', '3', '2', 0,
  /* 1365 */ 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'G', 'R', 'O', 'W', '_', 'I', '3', '2', 0,
  /* 1381 */ 'T', 'H', 'R', 'O', 'W', '_', 'I', '3', '2', 0,
  /* 1391 */ 'C', 'O', 'P', 'Y', '_', 'I', '3', '2', 0,
  /* 1400 */ 'C', 'U', 'R', 'R', 'E', 'N', 'T', '_', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'I', '3', '2', 0,
  /* 1419 */ 'G', 'R', 'O', 'W', '_', 'M', 'E', 'M', 'O', 'R', 'Y', '_', 'I', '3', '2', 0,
  /* 1435 */ 'C', 'L', 'Z', '_', 'I', '3', '2', 0,
  /* 1443 */ 'E', 'Q', 'Z', '_', 'I', '3', '2', 0,
  /* 1451 */ 'C', 'T', 'Z', '_', 'I', '3', '2', 0,
  /* 1459 */ 'C', 'A', 'L', 'L', '_', 'v', '4', 'f', '3', '2', 0,
  /* 1470 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'v', '4', 'f', '3', '2', 0,
  /* 1495 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'v', '4', 'f', '3', '2', 0,
  /* 1516 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '4', 'f', '3', '2', 0,
  /* 1531 */ 'C', 'A', 'L', 'L', '_', 'v', '4', 'i', '3', '2', 0,
  /* 1542 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'v', '4', 'i', '3', '2', 0,
  /* 1567 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'v', '4', 'i', '3', '2', 0,
  /* 1588 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '4', 'i', '3', '2', 0,
  /* 1603 */ 'G', '_', 'F', 'L', 'O', 'G', '2', 0,
  /* 1611 */ 'G', '_', 'F', 'E', 'X', 'P', '2', 0,
  /* 1619 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '6', '4', 0,
  /* 1638 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '3', '2', '_', 'F', '6', '4', 0,
  /* 1657 */ 'F', 'P', '_', 'T', 'O', '_', 'S', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '6', '4', 0,
  /* 1676 */ 'F', 'P', '_', 'T', 'O', '_', 'U', 'I', 'N', 'T', '_', 'I', '6', '4', '_', 'F', '6', '4', 0,
  /* 1695 */ 'S', 'U', 'B', '_', 'F', '6', '4', 0,
  /* 1703 */ 'T', 'R', 'U', 'N', 'C', '_', 'F', '6', '4', 0,
  /* 1713 */ 'L', 'O', 'A', 'D', '_', 'F', '6', '4', 0,
  /* 1722 */ 'A', 'D', 'D', '_', 'F', '6', '4', 0,
  /* 1730 */ 'T', 'E', 'E', '_', 'F', '6', '4', 0,
  /* 1738 */ 'G', 'E', '_', 'F', '6', '4', 0,
  /* 1745 */ 'L', 'E', '_', 'F', '6', '4', 0,
  /* 1752 */ 'N', 'E', '_', 'F', '6', '4', 0,
  /* 1759 */ 'S', 'T', 'O', 'R', 'E', '_', 'F', '6', '4', 0,
  /* 1769 */ 'F', '3', '2', '_', 'D', 'E', 'M', 'O', 'T', 'E', '_', 'F', '6', '4', 0,
  /* 1784 */ 'N', 'E', 'G', '_', 'F', '6', '4', 0,
  /* 1792 */ 'G', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'F', '6', '4', 0,
  /* 1807 */ 'S', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'F', '6', '4', 0,
  /* 1822 */ 'T', 'E', 'E', '_', 'L', 'O', 'C', 'A', 'L', '_', 'F', '6', '4', 0,
  /* 1836 */ 'G', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'F', '6', '4', 0,
  /* 1850 */ 'S', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'F', '6', '4', 0,
  /* 1864 */ 'C', 'E', 'I', 'L', '_', 'F', '6', '4', 0,
  /* 1873 */ 'C', 'A', 'L', 'L', '_', 'F', '6', '4', 0,
  /* 1882 */ 'M', 'U', 'L', '_', 'F', '6', '4', 0,
  /* 1890 */ 'C', 'O', 'P', 'Y', 'S', 'I', 'G', 'N', '_', 'F', '6', '4', 0,
  /* 1903 */ 'M', 'I', 'N', '_', 'F', '6', '4', 0,
  /* 1911 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'F', '6', '4', 0,
  /* 1934 */ 'D', 'R', 'O', 'P', '_', 'F', '6', '4', 0,
  /* 1943 */ 'E', 'Q', '_', 'F', '6', '4', 0,
  /* 1950 */ 'F', 'L', 'O', 'O', 'R', '_', 'F', '6', '4', 0,
  /* 1960 */ 'A', 'B', 'S', '_', 'F', '6', '4', 0,
  /* 1968 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '6', '4', 0,
  /* 1984 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'F', '6', '4', 0,
  /* 2000 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 2020 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'S', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 2040 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 2060 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'S', 'A', 'T', '_', 'F', '6', '4', 0,
  /* 2080 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '6', '4', 0,
  /* 2091 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'F', '6', '4', 0,
  /* 2110 */ 'I', '6', '4', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'F', '6', '4', 0,
  /* 2130 */ 'G', 'T', '_', 'F', '6', '4', 0,
  /* 2137 */ 'L', 'T', '_', 'F', '6', '4', 0,
  /* 2144 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'F', '6', '4', 0,
  /* 2157 */ 'S', 'Q', 'R', 'T', '_', 'F', '6', '4', 0,
  /* 2166 */ 'N', 'E', 'A', 'R', 'E', 'S', 'T', '_', 'F', '6', '4', 0,
  /* 2178 */ 'C', 'O', 'N', 'S', 'T', '_', 'F', '6', '4', 0,
  /* 2188 */ 'I', '3', '2', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '6', '4', 0,
  /* 2204 */ 'I', '6', '4', '_', 'T', 'R', 'U', 'N', 'C', '_', 'U', '_', 'F', '6', '4', 0,
  /* 2220 */ 'D', 'I', 'V', '_', 'F', '6', '4', 0,
  /* 2228 */ 'M', 'A', 'X', '_', 'F', '6', '4', 0,
  /* 2236 */ 'C', 'O', 'P', 'Y', '_', 'F', '6', '4', 0,
  /* 2245 */ 'S', 'T', 'O', 'R', 'E', '3', '2', '_', 'I', '6', '4', 0,
  /* 2257 */ 'S', 'T', 'O', 'R', 'E', '1', '6', '_', 'I', '6', '4', 0,
  /* 2269 */ 'S', 'T', 'O', 'R', 'E', '8', '_', 'I', '6', '4', 0,
  /* 2280 */ 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 2288 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'I', '6', '4', 0,
  /* 2304 */ 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 2312 */ 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 2320 */ 'T', 'E', 'E', '_', 'I', '6', '4', 0,
  /* 2328 */ 'B', 'R', '_', 'T', 'A', 'B', 'L', 'E', '_', 'I', '6', '4', 0,
  /* 2341 */ 'N', 'E', '_', 'I', '6', '4', 0,
  /* 2348 */ 'S', 'T', 'O', 'R', 'E', '_', 'I', '6', '4', 0,
  /* 2358 */ 'C', 'A', 'T', 'C', 'H', '_', 'I', '6', '4', 0,
  /* 2368 */ 'G', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'I', '6', '4', 0,
  /* 2383 */ 'S', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'I', '6', '4', 0,
  /* 2398 */ 'T', 'E', 'E', '_', 'L', 'O', 'C', 'A', 'L', '_', 'I', '6', '4', 0,
  /* 2412 */ 'G', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'I', '6', '4', 0,
  /* 2426 */ 'S', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'I', '6', '4', 0,
  /* 2440 */ 'S', 'H', 'L', '_', 'I', '6', '4', 0,
  /* 2448 */ 'C', 'A', 'L', 'L', '_', 'I', '6', '4', 0,
  /* 2457 */ 'R', 'O', 'T', 'L', '_', 'I', '6', '4', 0,
  /* 2466 */ 'M', 'U', 'L', '_', 'I', '6', '4', 0,
  /* 2474 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'I', '6', '4', 0,
  /* 2497 */ 'I', '3', '2', '_', 'W', 'R', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 2510 */ 'D', 'R', 'O', 'P', '_', 'I', '6', '4', 0,
  /* 2519 */ 'E', 'Q', '_', 'I', '6', '4', 0,
  /* 2526 */ 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 2534 */ 'R', 'O', 'T', 'R', '_', 'I', '6', '4', 0,
  /* 2543 */ 'L', 'O', 'A', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2556 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '3', '2', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2575 */ 'L', 'O', 'A', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2588 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '1', '6', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2607 */ 'L', 'O', 'A', 'D', '8', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2619 */ 'I', '6', '4', '_', 'E', 'X', 'T', 'E', 'N', 'D', '8', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2637 */ 'G', 'E', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2646 */ 'L', 'E', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2655 */ 'R', 'E', 'M', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2665 */ 'S', 'H', 'R', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2675 */ 'G', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2684 */ 'L', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2693 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2711 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2729 */ 'D', 'I', 'V', '_', 'S', '_', 'I', '6', '4', 0,
  /* 2739 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '6', '4', 0,
  /* 2750 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'I', '6', '4', 0,
  /* 2769 */ 'F', '6', '4', '_', 'R', 'E', 'I', 'N', 'T', 'E', 'R', 'P', 'R', 'E', 'T', '_', 'I', '6', '4', 0,
  /* 2789 */ 'P', 'O', 'P', 'C', 'N', 'T', '_', 'I', '6', '4', 0,
  /* 2800 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'I', '6', '4', 0,
  /* 2813 */ 'C', 'O', 'N', 'S', 'T', '_', 'I', '6', '4', 0,
  /* 2823 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '3', '2', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2843 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '1', '6', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2863 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '8', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2882 */ 'G', 'E', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2891 */ 'L', 'E', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2900 */ 'R', 'E', 'M', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2910 */ 'S', 'H', 'R', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2920 */ 'G', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2929 */ 'L', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2938 */ 'F', '3', '2', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2956 */ 'F', '6', '4', '_', 'C', 'O', 'N', 'V', 'E', 'R', 'T', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2974 */ 'D', 'I', 'V', '_', 'U', '_', 'I', '6', '4', 0,
  /* 2984 */ 'T', 'H', 'R', 'O', 'W', '_', 'I', '6', '4', 0,
  /* 2994 */ 'C', 'O', 'P', 'Y', '_', 'I', '6', '4', 0,
  /* 3003 */ 'C', 'L', 'Z', '_', 'I', '6', '4', 0,
  /* 3011 */ 'E', 'Q', 'Z', '_', 'I', '6', '4', 0,
  /* 3019 */ 'C', 'T', 'Z', '_', 'I', '6', '4', 0,
  /* 3027 */ 'S', 'U', 'B', '_', 'F', '3', '2', 'x', '4', 0,
  /* 3037 */ 'A', 'D', 'D', '_', 'F', '3', '2', 'x', '4', 0,
  /* 3047 */ 'M', 'U', 'L', '_', 'F', '3', '2', 'x', '4', 0,
  /* 3057 */ 'S', 'U', 'B', '_', 'I', '3', '2', 'x', '4', 0,
  /* 3067 */ 'A', 'D', 'D', '_', 'I', '3', '2', 'x', '4', 0,
  /* 3077 */ 'M', 'U', 'L', '_', 'I', '3', '2', 'x', '4', 0,
  /* 3087 */ 'C', 'A', 'L', 'L', '_', 'v', '8', 'i', '1', '6', 0,
  /* 3098 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'v', '8', 'i', '1', '6', 0,
  /* 3123 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'v', '8', 'i', '1', '6', 0,
  /* 3144 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '8', 'i', '1', '6', 0,
  /* 3159 */ 'S', 'U', 'B', '_', 'I', '8', 'x', '1', '6', 0,
  /* 3169 */ 'A', 'D', 'D', '_', 'I', '8', 'x', '1', '6', 0,
  /* 3179 */ 'M', 'U', 'L', '_', 'I', '8', 'x', '1', '6', 0,
  /* 3189 */ 'T', 'E', 'E', '_', 'V', '1', '2', '8', 0,
  /* 3198 */ 'G', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', '1', '2', '8', 0,
  /* 3214 */ 'S', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', '1', '2', '8', 0,
  /* 3230 */ 'T', 'E', 'E', '_', 'L', 'O', 'C', 'A', 'L', '_', 'V', '1', '2', '8', 0,
  /* 3245 */ 'G', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'V', '1', '2', '8', 0,
  /* 3260 */ 'S', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'V', '1', '2', '8', 0,
  /* 3275 */ 'D', 'R', 'O', 'P', '_', 'V', '1', '2', '8', 0,
  /* 3285 */ 'C', 'O', 'P', 'Y', '_', 'V', '1', '2', '8', 0,
  /* 3295 */ 'C', 'A', 'L', 'L', '_', 'v', '1', '6', 'i', '8', 0,
  /* 3306 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'v', '1', '6', 'i', '8', 0,
  /* 3331 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'v', '1', '6', 'i', '8', 0,
  /* 3352 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'v', '1', '6', 'i', '8', 0,
  /* 3367 */ 'S', 'U', 'B', '_', 'I', '1', '6', 'x', '8', 0,
  /* 3377 */ 'A', 'D', 'D', '_', 'I', '1', '6', 'x', '8', 0,
  /* 3387 */ 'M', 'U', 'L', '_', 'I', '1', '6', 'x', '8', 0,
  /* 3397 */ 'G', '_', 'F', 'M', 'A', 0,
  /* 3403 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 3410 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 3416 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'S', 'U', 'B', 0,
  /* 3432 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 3444 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3454 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3462 */ 'G', '_', 'S', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 3473 */ 'G', '_', 'Z', 'E', 'X', 'T', 'L', 'O', 'A', 'D', 0,
  /* 3484 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 3491 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 3498 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 3504 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'D', 'D', 0,
  /* 3520 */ 'C', 'A', 'L', 'L', '_', 'V', 'O', 'I', 'D', 0,
  /* 3530 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'V', 'O', 'I', 'D', 0,
  /* 3554 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'V', 'O', 'I', 'D', 0,
  /* 3574 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'N', 'A', 'N', 'D', 0,
  /* 3591 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 3597 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'A', 'N', 'D', 0,
  /* 3613 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 3626 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 3635 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 3652 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 3660 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 3673 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 3681 */ 'U', 'N', 'R', 'E', 'A', 'C', 'H', 'A', 'B', 'L', 'E', 0,
  /* 3693 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 3700 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 3713 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 3721 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 3731 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 3746 */ 'G', '_', 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 3761 */ 'T', 'E', 'E', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3776 */ 'G', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3798 */ 'S', 'E', 'T', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3820 */ 'T', 'E', 'E', '_', 'L', 'O', 'C', 'A', 'L', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3841 */ 'G', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3862 */ 'S', 'E', 'T', '_', 'L', 'O', 'C', 'A', 'L', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3883 */ 'C', 'A', 'L', 'L', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3899 */ 'F', 'A', 'L', 'L', 'T', 'H', 'R', 'O', 'U', 'G', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3929 */ 'D', 'R', 'O', 'P', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3945 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3963 */ 'P', 'C', 'A', 'L', 'L', '_', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 3989 */ 'A', 'R', 'G', 'U', 'M', 'E', 'N', 'T', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 4009 */ 'C', 'O', 'P', 'Y', '_', 'E', 'X', 'C', 'E', 'P', 'T', '_', 'R', 'E', 'F', 0,
  /* 4025 */ 'B', 'R', '_', 'I', 'F', 0,
  /* 4031 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 4038 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4053 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4067 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 4081 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', 0,
  /* 4098 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'C', 'H', 'G', 0,
  /* 4115 */ 'G', '_', 'F', 'L', 'O', 'G', 0,
  /* 4122 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 4130 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 4138 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 4146 */ 'G', '_', 'P', 'H', 'I', 0,
  /* 4152 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 4161 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 4170 */ 'E', 'N', 'D', '_', 'B', 'L', 'O', 'C', 'K', 0,
  /* 4180 */ 'G', '_', 'P', 'T', 'R', '_', 'M', 'A', 'S', 'K', 0,
  /* 4191 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 4200 */ 'D', 'B', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 4210 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 4219 */ 'A', 'N', 'N', 'O', 'T', 'A', 'T', 'I', 'O', 'N', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 4236 */ 'I', 'C', 'A', 'L', 'L', '_', 'B', 'R', 'A', 'N', 'C', 'H', '_', 'F', 'U', 'N', 'N', 'E', 'L', 0,
  /* 4256 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 4262 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 4282 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'Y', 'P', 'E', 'D', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 4309 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'E', 'V', 'E', 'N', 'T', '_', 'C', 'A', 'L', 'L', 0,
  /* 4330 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 4342 */ 'C', 'A', 'T', 'C', 'H', '_', 'A', 'L', 'L', 0,
  /* 4352 */ 'K', 'I', 'L', 'L', 0,
  /* 4357 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 4364 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 4370 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 4377 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 4384 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 4391 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 4401 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'I', 'N', 0,
  /* 4418 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'I', 'N', 0,
  /* 4434 */ 'E', 'N', 'D', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', 0,
  /* 4447 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 4463 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 4480 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 4488 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 4496 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 4504 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 4512 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 4521 */ 'G', '_', 'B', 'S', 'W', 'A', 'P', 0,
  /* 4529 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 4535 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 4544 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 4553 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 4560 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 4567 */ 'N', 'O', 'P', 0,
  /* 4571 */ 'E', 'N', 'D', '_', 'L', 'O', 'O', 'P', 0,
  /* 4580 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 4593 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 4605 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 4620 */ 'G', '_', 'F', 'E', 'X', 'P', 0,
  /* 4627 */ 'G', '_', 'B', 'R', 0,
  /* 4632 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 4657 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 4664 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 4671 */ 'G', '_', 'S', 'H', 'U', 'F', 'F', 'L', 'E', '_', 'V', 'E', 'C', 'T', 'O', 'R', 0,
  /* 4688 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 4694 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'X', 'O', 'R', 0,
  /* 4710 */ 'G', '_', 'O', 'R', 0,
  /* 4715 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'O', 'R', 0,
  /* 4730 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 4741 */ 'G', '_', 'F', 'A', 'B', 'S', 0,
  /* 4748 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 4765 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 4780 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 4797 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '_', 'W', 'I', 'T', 'H', '_', 'S', 'U', 'C', 'C', 'E', 'S', 'S', 0,
  /* 4827 */ 'B', 'R', '_', 'U', 'N', 'L', 'E', 'S', 'S', 0,
  /* 4837 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 4864 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 4874 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 4883 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 4896 */ 'C', 'A', 'T', 'C', 'H', 'R', 'E', 'T', 0,
  /* 4905 */ 'C', 'L', 'E', 'A', 'N', 'U', 'P', 'R', 'E', 'T', 0,
  /* 4916 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 4930 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 4954 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 4975 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 4995 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 5007 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 5018 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 5029 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 5040 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 5051 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 5061 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 5076 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 5085 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 5095 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 5103 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 5110 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 5119 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 5126 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 5133 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 5140 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 5147 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 5154 */ 'R', 'E', 'T', 'H', 'R', 'O', 'W', 0,
  /* 5162 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'U', 'M', 'A', 'X', 0,
  /* 5179 */ 'G', '_', 'A', 'T', 'O', 'M', 'I', 'C', 'R', 'M', 'W', '_', 'M', 'A', 'X', 0,
  /* 5195 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 5209 */ 'C', 'O', 'P', 'Y', 0,
  /* 5214 */ 'E', 'N', 'D', '_', 'T', 'R', 'Y', 0,
};

extern const unsigned WebAssemblyInstrNameIndices[] = {
    4148U, 4391U, 4447U, 4210U, 4191U, 4219U, 4352U, 4038U, 
    4053U, 3748U, 4067U, 4780U, 3721U, 4200U, 3660U, 5209U, 
    3693U, 5061U, 3613U, 4512U, 4330U, 5029U, 3635U, 5018U, 
    3700U, 4593U, 4580U, 4632U, 4916U, 4930U, 4262U, 4309U, 
    4282U, 4236U, 3498U, 3410U, 4364U, 5133U, 5140U, 4377U, 
    4384U, 3591U, 4710U, 4688U, 3746U, 4146U, 5195U, 3731U, 
    4864U, 4748U, 5076U, 4765U, 5040U, 4730U, 5085U, 3484U, 
    3462U, 3473U, 3713U, 4797U, 4081U, 4098U, 3504U, 3416U, 
    3597U, 3574U, 4715U, 4694U, 5179U, 4418U, 5162U, 4401U, 
    3626U, 4883U, 3432U, 4837U, 5110U, 3454U, 5007U, 4995U, 
    5051U, 4122U, 5103U, 5119U, 4256U, 4664U, 4657U, 4560U, 
    4553U, 4874U, 3673U, 3652U, 4488U, 4480U, 4504U, 4496U, 
    4138U, 4130U, 3491U, 3403U, 4357U, 3397U, 5126U, 4370U, 
    5147U, 4620U, 1611U, 4115U, 1603U, 4031U, 5095U, 3444U, 
    4152U, 4161U, 4535U, 4544U, 4741U, 4529U, 4180U, 4627U, 
    4975U, 4954U, 4671U, 4521U, 342U, 1960U, 103U, 3037U, 
    1722U, 3377U, 674U, 3067U, 2304U, 3169U, 4463U, 4605U, 
    682U, 2312U, 3989U, 526U, 2144U, 1171U, 2800U, 3352U, 
    1516U, 1588U, 3144U, 1194U, 2843U, 2823U, 1214U, 2863U, 
    658U, 2288U, 4174U, 4629U, 4025U, 698U, 2328U, 4827U, 
    3883U, 255U, 1873U, 847U, 2448U, 3964U, 474U, 2092U, 
    1122U, 2751U, 3555U, 3332U, 1496U, 1568U, 3124U, 3520U, 
    3295U, 1459U, 1531U, 3087U, 4896U, 4342U, 757U, 2358U, 
    246U, 1864U, 4905U, 1435U, 3003U, 560U, 2178U, 1184U, 
    2813U, 272U, 1890U, 4009U, 618U, 2236U, 1391U, 2994U, 
    3285U, 1451U, 3019U, 1400U, 602U, 2220U, 1100U, 2729U, 
    1342U, 2974U, 3929U, 316U, 1934U, 896U, 2510U, 3275U, 
    4170U, 4434U, 4571U, 5214U, 1443U, 3011U, 325U, 1943U, 
    905U, 2519U, 1064U, 2693U, 1306U, 2938U, 1769U, 1140U, 
    1082U, 2711U, 1324U, 2956U, 150U, 2769U, 3899U, 293U, 
    1911U, 873U, 2474U, 3530U, 3306U, 1470U, 1542U, 3098U, 
    332U, 1950U, 0U, 1619U, 38U, 1657U, 19U, 1638U, 
    57U, 1676U, 3776U, 174U, 1792U, 767U, 2368U, 3198U, 
    3841U, 218U, 1836U, 811U, 2412U, 3245U, 119U, 1738U, 
    1008U, 2637U, 1250U, 2882U, 1419U, 512U, 2130U, 1046U, 
    2675U, 1288U, 2920U, 942U, 973U, 492U, 350U, 1968U, 
    382U, 2000U, 570U, 2188U, 422U, 2040U, 2497U, 2588U, 
    2556U, 2619U, 991U, 1233U, 2110U, 366U, 1984U, 402U, 
    2020U, 586U, 2204U, 442U, 2060U, 126U, 1745U, 1017U, 
    2646U, 1259U, 2891U, 929U, 2575U, 1201U, 2850U, 2543U, 
    2830U, 961U, 2607U, 1221U, 2870U, 94U, 1713U, 665U, 
    2295U, 4575U, 519U, 2137U, 1055U, 2684U, 1297U, 2929U, 
    610U, 2228U, 1365U, 741U, 1352U, 728U, 285U, 1903U, 
    264U, 3047U, 1882U, 3387U, 865U, 3077U, 2466U, 3179U, 
    548U, 2166U, 166U, 1784U, 133U, 1752U, 711U, 2341U, 
    4567U, 913U, 2527U, 3963U, 473U, 2091U, 1121U, 2750U, 
    3554U, 3331U, 1495U, 1567U, 3123U, 1160U, 2789U, 1026U, 
    2655U, 1268U, 2900U, 5154U, 3911U, 305U, 1923U, 885U, 
    2486U, 3542U, 3318U, 1482U, 1554U, 3110U, 856U, 2457U, 
    920U, 2534U, 3945U, 462U, 2080U, 1110U, 2739U, 3798U, 
    189U, 1807U, 782U, 2383U, 3214U, 3862U, 232U, 1850U, 
    825U, 2426U, 3260U, 839U, 2440U, 1036U, 2665U, 1278U, 
    2910U, 539U, 2157U, 627U, 2257U, 2245U, 639U, 2269U, 
    140U, 1759U, 718U, 2348U, 76U, 3027U, 1695U, 3367U, 
    650U, 3057U, 2280U, 3159U, 3761U, 111U, 1730U, 690U, 
    2320U, 3820U, 204U, 1822U, 797U, 2398U, 3230U, 3189U, 
    1381U, 2984U, 84U, 1703U, 5218U, 3681U, 912U, 2526U, 
};

static inline void InitWebAssemblyMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, 456);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct WebAssemblyGenInstrInfo : public TargetInstrInfo {
  explicit WebAssemblyGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~WebAssemblyGenInstrInfo() override = default;

};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc WebAssemblyInsts[];
extern const unsigned WebAssemblyInstrNameIndices[];
extern const char WebAssemblyInstrNameData[];
WebAssemblyGenInstrInfo::WebAssemblyGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, 456);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpTypes {
enum OperandType {
  P2Align = 0,
  Signature = 1,
  TypeIndex = 2,
  bb_op = 3,
  f32imm = 4,
  f32imm_op = 5,
  f64imm = 6,
  f64imm_op = 7,
  function32_op = 8,
  global_op = 9,
  i16imm = 10,
  i1imm = 11,
  i32imm = 12,
  i32imm_op = 13,
  i64imm = 14,
  i64imm_op = 15,
  i8imm = 16,
  local_op = 17,
  offset32_op = 18,
  ptype0 = 19,
  ptype1 = 20,
  ptype2 = 21,
  ptype3 = 22,
  ptype4 = 23,
  ptype5 = 24,
  type0 = 25,
  type1 = 26,
  type2 = 27,
  type3 = 28,
  type4 = 29,
  type5 = 30,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

